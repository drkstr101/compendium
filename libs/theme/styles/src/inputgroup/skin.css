/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

.InputGroup {
  &.is-focused {
    &:not(.InputGroup--invalid):not(.is-disabled) {
      .InputGroup-input {
        border-color: var(--textfield-border-color-key-focus);
      }

      .FieldButton {
        border-color: var(--textfield-border-color-key-focus);
      }
    }
  }

  &:hover {
    &:not(.InputGroup--invalid):not(.is-focused):not(.is-disabled) {
      .InputGroup-input {
        border-color: var(--textfield-border-color-hover);
      }

      .FieldButton {
        border-color: var(--textfield-border-color-hover);
      }
    }
  }
}

.InputGroup.is-focused {
  .FieldButton,
  .InputGroup-input {
    border-color: var(--dropdown-border-color-key-focus);
  }

  &.InputGroup--invalid,
  &:invalid {
    .FieldButton,
    .InputGroup-input {
      border-color: var(--dropdown-border-color-error);
    }
  }
}

/* Only add the 2px ring for keyboard focus */
.InputGroup:focus-ring:not(.InputGroup--quiet) {
  .FieldButton {
    z-index: 1;
  }

  .FieldButton,
  .InputGroup-input {
    box-shadow: 0 0 0 1px var(--dropdown-border-color-key-focus);
  }

  &.InputGroup--invalid,
  &:invalid {
    .FieldButton,
    .InputGroup-input {
      box-shadow: 0 0 0 1px var(--dropdown-border-color-error);
    }
  }
}

.InputGroup--quiet {
  /*
    specifically for readonly inputgroups that aren't disabled since the button will have the disabled class
    but we don't want the border color to be the disabled quiet one
  */
  &:not(.is-disabled) {
    .FieldButton {
      &:disabled,
      &:disabled:hover {
        border-color: var(--textfield-quiet-border-color);
      }
    }
  }

  .FieldButton {
    &,
    &:hover,
    &:focus,
    &:active,
    &.is-selected,
    &:invalid,
    &.FieldButton--invalid {
      border-color: var(--textfield-quiet-border-color);
    }

    &:disabled,
    &:disabled:hover {
      border-color: var(--textfield-quiet-border-color-disabled);
    }
  }

  &:hover:not(.InputGroup--invalid):not(.is-focused):not(.is-disabled) {
    .FieldButton {
      border-color: var(--textfield-quiet-border-color-hover);
    }
  }

  &.InputGroup {
    &.InputGroup--invalid,
    &:invalid {
      .FieldButton,
      .InputGroup-input {
        border-color: var(--textfield-border-color-error);
      }
    }

    &.is-focused {
      .FieldButton {
        border-color: var(--textfield-quiet-border-color-key-focus);
      }

      &.InputGroup--invalid,
      &:invalid {
        .FieldButton {
          border-color: var(--textfield-border-color-error);
        }
      }
    }

    &:focus-ring {
      .InputGroup-input {
        box-shadow: 0 1px 0 var(--textfield-quiet-border-color-key-focus);
      }

      .FieldButton {
        box-shadow: 0 1px 0 var(--textfield-quiet-border-color-key-focus);
        border-color: var(--textfield-quiet-border-color-key-focus);
      }

      &.InputGroup--invalid,
      &:invalid {
        .InputGroup-input {
          box-shadow: 0 1px 0 var(--textfield-border-color-error);
        }

        .FieldButton {
          box-shadow: 0 1px 0 var(--textfield-border-color-error);
        }
      }
    }
  }
}

.Datepicker--range {
  &:focus-ring {
    .InputGroup-input {
      box-shadow: none !important;
    }
  }

  &.is-disabled {
    .Datepicker--rangeDash {
      color: var(--textfield-text-color-disabled);
    }
  }

  /* Focus ring: When one of the inputs or the button has keyboard focus, render the focus ring border around the entire input group by styling an adjacent descendant element. */
  &:focus-ring {
    box-shadow: 0 0 0 1px var(--dropdown-border-color-key-focus);

    &:invalid,
    &.InputGroup--invalid {
      box-shadow: 0 0 0 1px var(--dropdown-border-color-error);

      .FieldButton {
        box-shadow: 0 0 0 1px var(--dropdown-border-color-error);
      }
    }
  }

  &.InputGroup--invalid {
    .InputGroup-input {
      border-color: var(--dropdown-border-color-error) !important;
    }

    /* Focus ring: When one of the inputs or the button has keyboard focus, render the focus ring border around the entire input group by styling an adjacent descendant element. */
    &:focus-ring {
      .FieldButton {
        border-color: var(--dropdown-border-color-error);
        box-shadow: 0 0 0 1px var(--dropdown-border-color-error);
      }
    }
    .FieldButton {
      border-color: var(--dropdown-border-color-error);
      &.FieldButton--invalid {
        &:focus-ring {
          border-color: var(--dropdown-border-color-error);
          box-shadow: 0 0 0 1px var(--dropdown-border-color-error);
        }
      }
    }
  }
  &.InputGroup--quiet {
    &.is-focused {
      box-shadow: 0 1px 0 0 var(--dropdown-border-color-key-focus);

      &.InputGroup--invalid {
        .FieldButton {
          box-shadow: none;
          border-color: var(--dropdown-border-color-error);
          &.FieldButton--invalid {
            &:focus-ring {
              box-shadow: 0 2px 0 0 var(--dropdown-border-color-error);
            }
          }
        }
        &:focus-ring {
          box-shadow: 0 0 0 1px var(--dropdown-border-color-error);
        }
      }
    }
  }
}
