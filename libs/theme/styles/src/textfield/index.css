/*
 * Copyright 2022 Watheia Labs, LLC. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

@import '~@compendium/theme.styles.commons';

:root {
  --textfield-padding-top: 3px;
  --textfield-padding-bottom: 5px;

  /* Todo fix in DNA */
  --textfield-quiet-border-radius: 0;

  --textfield-quiet-invalid-background-position: 100% 50%;

  --textfield-multiline-height: auto;
  --textfield-multiline-min-height: var(--global-dimension-size-700);

  --textfield-multiline-padding-x: var(--textfield-padding-x);
  --textfield-multiline-padding-top: var(--textfield-padding-top);
  --textfield-multiline-padding-bottom: var(--textfield-padding-bottom);

  /* Todo: DNA uses incorrect font family "Adobe Clean" */
  --textfield-text-font-family-fixed: var(--font-family-base);
}

.Textfield {
  display: inline-flex;
  position: relative;
  min-width: var(--textfield-min-width);
  width: var(--component-single-line-width);

  &:not(.Textfield--quiet).Textfield--multiline .Textfield-input {
    resize: vertical;
  }

  &.Textfield--quiet.Textfield--multiline .Textfield-input {
    height: var(--textfield-height);
    min-height: var(--textfield-height);
    overflow-x: hidden;
  }
}

.Textfield-input {
  /* box */
  box-sizing: border-box;
  border: var(--textfield-border-size) solid;
  border-radius: var(--textfield-border-radius);

  /* Apply padding by default to center text, giving consistency between input and textfield */
  padding: var(--textfield-padding-top) var(--textfield-padding-x)
    var(--textfield-padding-bottom) calc(var(--textfield-padding-x) - 1px);
  /* Use padding instead of text-indent because text-indent does not left align the text in Edge browser  */
  text-indent: 0;

  inline-size: 100%;
  height: var(--textfield-height);

  vertical-align: top; /* used to align them correctly in forms. */

  /* Remove the margin for input in Firefox and Safari. */
  margin: 0;

  /* Show the overflow for input in Edge. */
  overflow: visible;

  /* Change the input font styles in all browsers */
  font-family: var(--textfield-text-font-family-fixed);
  font-size: var(--textfield-text-size);
  line-height: var(--textfield-text-line-height);
  text-overflow: ellipsis;

  transition: border-color var(--global-animation-duration-100) ease-in-out,
    box-shadow var(--global-animation-duration-100) ease-in-out;

  outline: none;

  -webkit-appearance: none;
  /*
    Removes the native spin buttons in Firefox; -moz-appearance: none results in spinners.
    This has to come after -webkit-appearance or it gets overridden (#214)
    Details: http://stackoverflow.com/questions/23372903/hide-spinner-in-input-number-firefox-29

    Sets the opacity to 1 as normalize.css sets an opacity to placeholders
    Details: https://github.com/csstools/normalize.css/blob/master/normalize.css#L297
  */
  -moz-appearance: textfield;

  &::placeholder,
  &.is-placeholder {
    font-weight: var(--textfield-placeholder-text-font-weight);
    font-style: var(--textfield-placeholder-text-font-style);
    font-synthesis: none;
    transition: color var(--global-animation-duration-100) ease-in-out;
    opacity: 1;
  }

  /* added to work with Edge, note, it needs double ::
   * not single : which is what autoprefixer will add
   */
  &::-ms-input-placeholder {
    font-weight: var(--textfield-placeholder-text-font-weight);
    font-style: var(--textfield-placeholder-text-font-style);
    transition: color var(--global-animation-duration-100) ease-in-out;
    opacity: 1;
  }

  /* placeholder gets clipped for synthetic italics, we rely on font-synthesis once
   * chrome supports it https://bugs.chromium.org/p/chromium/issues/detail?id=509989
   */
  &:lang(ja),
  &:lang(zh),
  &:lang(ko),
  &:lang(ar),
  &:lang(he) {
    &::placeholder,
    &.is-placeholder {
      font-style: normal;
    }
    &::-ms-input-placeholder {
      /* added to work with Edge, same as above */
      font-style: normal;
    }
  }

  &:hover {
    &::placeholder {
      font-weight: var(--textfield-placeholder-text-font-weight);
    }
  }

  &:disabled {
    /* Disable the resize functionality when disabled */
    resize: none;

    /* The opacity must be set to 1 */
    opacity: 1;
    &::placeholder,
    &.is-placeholder {
      font-weight: var(--textfield-placeholder-text-font-weight);
    }
  }

  /* Remove the native clear button in IE */
  /* http://stackoverflow.com/questions/14007655/remove-ie10s-clear-field-x-button-on-certain-inputs */
  &::-ms-clear {
    width: 0;
    height: 0;
  }

  /* removes the native spin buttons */
  /* http://stackoverflow.com/questions/23372903/hide-spinner-in-input-number-firefox-29 */
  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* removes the red border that appears in Firefox */
  &:-moz-ui-invalid {
    box-shadow: none;
  }

  .Textfield--multiline & {
    height: var(--textfield-multiline-height);
    min-height: var(--textfield-multiline-min-height);
    padding: var(--textfield-multiline-padding-top) var(--textfield-multiline-padding-x)
      var(--textfield-multiline-padding-bottom) calc(var(--textfield-multiline-padding-x) - 1px);

    /* Remove the default vertical scrollbar for textarea in IE. */
    overflow: auto;
  }

  .Textfield--quiet & {
    border-radius: var(--textfield-quiet-border-radius);
    border-width: 0 0 var(--textfield-quiet-border-size) 0;

    /* removes the side padding to align the text properly */
    padding-inline-start: var(--textfield-quiet-padding-x);
    padding-inline-end: var(--textfield-quiet-padding-x);

    /* Treat all quiet inputs and textareas the same */
    resize: none;
    overflow-y: hidden;
  }

  .Textfield--valid & {
    padding-inline-end: calc(
      var(--textfield-padding-x) + var(--icon-checkmark-medium-width) +
        var(--textfield-icon-margin-left)
    );
  }

  .Textfield--invalid & {
    padding-inline-end: calc(
      var(--textfield-padding-x) + var(--icon-alert-medium-width) +
        var(--textfield-icon-margin-left)
    );
  }

  .Textfield--loadable & {
    padding-inline-end: calc(
      var(--textfield-padding-x) + var(--icon-alert-medium-width) +
        var(--textfield-icon-margin-left)
    );
  }
}

.Textfield-validationIcon {
  /* TODO: Confirm if this is ok for the validation icon sizing
    Note that the sizes are a bit different when compared with old background icons(more noticable for checkmark)
  */
  position: absolute;
  padding-inline-end: calc(var(--textfield-padding-x, var(--global-dimension-size-150)) / 2);
  pointer-events: all;
  transition: color var(--global-animation-duration-100) ease-in-out;

  .Textfield--quiet & {
    padding-inline-end: 0;
  }
}

.Textfield--invalid .Textfield-validationIcon {
  width: var(--icon-alert-medium-width);
  height: var(--icon-alert-medium-height);
  top: calc(calc(var(--textfield-icon-frame) / 2) - calc(var(--icon-alert-medium-height) / 2));
  inset-inline-end: calc(
    calc(var(--textfield-icon-frame) / 2) - calc(var(--icon-alert-medium-width) / 2)
  );
}
.Textfield--valid .Textfield-validationIcon {
  width: var(--icon-checkmark-medium-width);
  height: var(--icon-checkmark-medium-height);
  top: calc(
    calc(var(--textfield-icon-frame) / 2) - calc(var(--icon-checkmark-medium-height) / 2)
  );
  inset-inline-end: var(--global-dimension-size-150);
}

/* styles the left icon for textfield, assumes usage of workflow icon sizing (18px by 18px) */
.Textfield-icon {
  display: block;
  position: absolute;
  height: var(--icon-info-medium-height);
  width: var(--icon-info-medium-width);
  /* This has a named variable in a future update of css. */
  inset-inline-start: var(--global-dimension-size-150);
  top: var(--global-dimension-size-85);
  transition: fill var(--global-animation-duration-100) ease-in-out;
}

/* styles the textfield properly if the left icon is provided */
.Textfield-inputIcon {
  /* Use padding instead of text-indent so long strings don't overlap the icon */
  /* These values have real names in a css update, when we update, use those. */
  padding-inline-start: calc(
    var(--global-dimension-size-150) + var(--global-dimension-size-225) +
      var(--global-dimension-size-65)
  );

  .Textfield--quiet & {
    padding-inline-start: calc(
      var(--global-dimension-size-100) + var(--icon-info-medium-width)
    );

    /* Since quiet button has no left padding, push the icon all the way to the left */
    & ~ .Textfield-icon {
      inset-inline-start: 0;
    }
  }

  &.Textfield--multiline {
    height: var(--textfield-height);
    min-height: var(--textfield-height);
  }
}

/* same positioning as invalid icon */
.Textfield--loadable .Textfield-circleLoader {
  position: absolute;
  top: calc(calc(var(--textfield-icon-frame) / 2) - calc(var(--loader-circle-small-width) / 2));
  /* can't use padding right since it breaks the circle loader so add here */
  inset-inline-end: calc(
    calc(calc(var(--textfield-icon-frame) / 2) - calc(var(--icon-alert-medium-width) / 2)) +
      calc(var(--textfield-padding-x, var(--global-dimension-size-150)) / 2)
  );

  .Textfield--quiet& {
    padding-inline-end: 0;
  }
}
