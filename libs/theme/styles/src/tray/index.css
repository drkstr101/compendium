/*
 * Copyright 2022 Watheia Labs, LLC. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

@import '~@compendium/theme.styles.commons';
@import '~@compendium/theme.styles.overlay';

:root {
  /* Bug: this must be 0ms, not 0 */
  --dialog-exit-animation-delay: 0ms;
}

.Tray-wrapper {
  inset-inline-start: 0;
  /* Positioned at the top of the window */
  position: fixed;
  top: 0;

  display: flex;
  justify-content: center;
  width: 100%;

  /* On mobile browsers, vh units are fixed based on the maximum height of the screen.
   * However, when you scroll, the toolbar and address bar shrink, making the viewport resize.
   * The visual viewport also shrinks when the keyboard is displayed. We use the VisualViewport
   * API in JS to set this CSS variable to ensure the height is correct. */
  height: var(--visual-viewport-height);

  /* Don't catch clicks */
  pointer-events: none;

  /* Appear above underlay */
  z-index: 2;
}

.Tray {
  @inherit: %overlay;

  /* defined here so it can be accessed from JS */
  --tray-margin-top: 64px;

  width: var(--tray-width);
  max-width: var(--tray-max-width);
  min-height: var(--tray-min-height);
  max-height: calc(var(--visual-viewport-height) - var(--tray-margin-top));
  position: absolute;
  bottom: 0;
  outline: none;
  display: flex;
  flex-direction: column;
  padding-bottom: env(safe-area-inset-bottom);

  border-radius: var(--tray-full-width-border-radius) var(--tray-full-width-border-radius)
    var(--tray-border-radius) var(--tray-border-radius);

  /* Start offset by the animation distance */
  transform: translateY(100%);

  /* Exit animations */
  transition: opacity var(--dialog-exit-animation-duration) cubic-bezier(0.5, 0, 1, 1)
      var(--dialog-exit-animation-delay),
    transform var(--dialog-exit-animation-duration) cubic-bezier(0.5, 0, 1, 1)
      var(--dialog-exit-animation-delay);

  &.is-open {
    @inherit: %overlay--open;

    /* Entry animations */
    transition: transform var(--dialog-entry-animation-duration) cubic-bezier(0, 0, 0.4, 1)
        var(--dialog-entry-animation-delay),
      opacity var(--dialog-entry-animation-duration) cubic-bezier(0, 0, 0.4, 1)
        var(--dialog-entry-animation-delay);

    transform: translateY(0);
  }
}

.Tray--fixedHeight {
  height: calc(var(--visual-viewport-height) - var(--tray-margin-top));
  top: var(--tray-margin-top);
}

/* Should match --tray-max-width above */
@media (max-width: 375px) {
  .Tray {
    border-radius: var(--tray-border-radius);
  }
}
